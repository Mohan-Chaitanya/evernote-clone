{"version":3,"sources":["sidebaritem/styles.js","sidebaritem/sidebaritem.js","helper.js","sidebar/sidebar.js","editor/editor.js","App.js","reportWebVitals.js","firebase/config.js","index.js"],"names":["styles","theme","listItem","cursor","textSection","maxWidth","deleteIcon","position","right","top","color","SidebarItemComponent","selectNote","n","i","props","deleteNote","note","window","confirm","str","this","_index","_note","classes","selectedNoteIndex","ListItem","className","selected","alignItems","onClick","ListItemText","primary","title","secondary","body","substring","replace","React","Component","withStyles","SidebarComponent","newNoteBtnClick","console","log","setState","addingNote","state","updateTitle","txt","newNote","notes","type","placeholder","onKeyUp","e","target","value","map","Divider","EditorComponent","componentDidMount","text","selectedNote","id","componentDidUpdate","a","update","updateBody","val","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","noteUpdate","onChange","App","firebase","firestore","collection","onSnapshot","serverUpdate","dbnotes","docs","_doc","data","index","noteObj","doc","timestamp","FieldValue","serverTimestamp","add","newItemDB","newID","newNoteIndex","indexOf","filter","noteIndex","length","delete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a02c67ae.chunk.js","sourcesContent":["const styles = theme => ({\r\n    listItem: {\r\n        cursor: 'pointer'\r\n    },\r\n    textSection: {\r\n        maxWidth: '85%'\r\n    },\r\n    deleteIcon: {\r\n        position: 'absolute',\r\n        right: '5px',\r\n        top: 'calc(50% - 15px)',\r\n        '&:hover': {\r\n            color: 'red'\r\n        }\r\n    }\r\n});\r\n\r\nexport default styles;","import React, { useState } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport styles from './styles';\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { removeHTMLTags } from '../helper'\r\n\r\nclass SidebarItemComponent extends React.Component {\r\n    render() {\r\n\r\n        const { _index, _note, classes, selectedNoteIndex } = this.props;\r\n\r\n        return (\r\n            <div key={_index}>\r\n                <ListItem className='sidebarListItem'\r\n                    selected={selectedNoteIndex === _index}\r\n                    alignItems='flex-start'>\r\n                    <div className={classes.textSection}\r\n                        onClick={() => this.selectNote(_note, _index)}>\r\n                        <ListItemText primary={_note.title}\r\n                            secondary={removeHTMLTags(_note.body.substring(0, 30) + '....')}></ListItemText>\r\n                    </div>\r\n                    <DeleteIcon onClick={() => this.deleteNote(_note)} className={classes.deleteIcon}></DeleteIcon>\r\n                </ListItem>\r\n            </div>\r\n        )\r\n    }\r\n    selectNote = (n, i) => this.props.selectNote(n, i);\r\n    deleteNote = (note) => {\r\n        if (window.confirm(`Are you sure you want to delete : ${note}`)) {\r\n            this.props.deleteNote(note)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SidebarItemComponent)","export default function debounce(a, b, c) {\r\n    var d, e;\r\n    return function () {\r\n        function h() {\r\n            d = null;\r\n            c || (e = a.apply(f, g));\r\n        }\r\n        var f = this, g = arguments;\r\n        return (clearTimeout(d), d = setTimeout(h, b), c && !d && (e = a.apply(f, g)), e)\r\n    }\r\n}\r\n\r\nexport function removeHTMLTags(str) {\r\n    return str.replace(/<[^>]*>?/gm, '');\r\n};\r\n","import React, { useState } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { List, Divider } from '@material-ui/core'\r\nimport SidebarItemComponent from '../sidebaritem/sidebaritem'\r\n\r\nclass SidebarComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            addingNote: false,\r\n            title: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { notes, selectedNoteIndex } = this.props;\r\n\r\n        if (notes) {\r\n            console.log('sidebar', notes);\r\n            return (\r\n                <div className='sidebarDiv'>\r\n                    <button\r\n                        onClick={this.newNoteBtnClick}\r\n                        className='newNoteBtn'>{this.state.addingNote ? 'Cancel' : 'New Note'}</button>\r\n                    {\r\n                        this.state.addingNote ?\r\n                            <div>\r\n                                <input type='text'\r\n                                    className='noteTitle'\r\n                                    placeholder='Enter note title'\r\n                                    onKeyUp={(e) => this.updateTitle(e.target.value)}>\r\n                                </input>\r\n                                <button\r\n                                    className='newNoteSubmitBtn'\r\n                                    onClick={this.newNote}>Submit Note</button>\r\n                            </div> :\r\n                            null\r\n                    }\r\n                    <div>\r\n                        {\r\n                            notes.map((_note, _index) => {\r\n                                return (\r\n                                    <div key={_index}>\r\n                                        <SidebarItemComponent\r\n                                            _note={_note}\r\n                                            _index={_index}\r\n                                            selectedNoteIndex={selectedNoteIndex}\r\n                                            selectNote={this.selectNote}\r\n                                            deleteNote={this.deleteNote}>\r\n                                        </SidebarItemComponent>\r\n                                        <Divider></Divider>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div></div>\r\n        }\r\n\r\n    }\r\n    newNoteBtnClick = () => {\r\n        console.log('New Note Btn');\r\n        this.setState({ title: null, addingNote: !this.state.addingNote });\r\n\r\n    }\r\n\r\n    updateTitle = (txt) => {\r\n        console.log('here the is', txt)\r\n        this.setState({ title: txt });\r\n    }\r\n\r\n    newNote = () => {\r\n        this.props.newNote(this.state.title);\r\n        this.setState({ title: null, addingNote: false })\r\n    }\r\n\r\n    selectNote = (n, i) => { this.props.selectNote(n, i) };\r\n    deleteNote = (note) => { this.props.deleteNote(note) };\r\n}\r\n\r\nexport default SidebarComponent;","import React from 'react'\r\nimport ReactQuill from 'react-quill'\r\nimport borderColorIcon from '@material-ui/icons/BorderColor'\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport _ from 'lodash'\r\nimport { Update } from '@material-ui/icons'\r\nimport debounce from '../helper'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport styles from './styles';\r\n\r\nclass EditorComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            text: '',\r\n            title: '',\r\n            id: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            text: this.props.selectedNote.body,\r\n            title: this.props.selectedNote.title,\r\n            id: this.props.selectedNote.id\r\n        });\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.selectedNote.id !== this.state.id) {\r\n            this.setState({\r\n                text: this.props.selectedNote.body,\r\n                title: this.props.selectedNote.title,\r\n                id: this.props.selectedNote.id\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <input className='headingBar'\r\n                    placeholder='Note Title...'\r\n                    value={this.state.title ? this.state.title : ''}\r\n                    onChange={(e) => this.updateTitle(e.target.value)} ></input>\r\n                <ReactQuill\r\n                    value={this.state.text}\r\n                    onChange={this.updateBody}>\r\n                </ReactQuill>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    updateTitle = async (txt) => {\r\n        await this.setState({ title: txt });\r\n        this.update()\r\n    }\r\n\r\n    updateBody = async (val) => {\r\n        await this.setState({ text: val });\r\n        this.update();\r\n    };\r\n    update = debounce(() => {\r\n        this.props.noteUpdate(this.state.id, {\r\n            title: this.state.title,\r\n            body: this.state.text\r\n        })\r\n    }, 1500);\r\n}\r\n\r\nexport default EditorComponent;\r\n// const EditorComponent = (props) => {\r\n\r\n//     const [text, setText] = useState('');\r\n//     const [title, setTitle] = useState('');\r\n//     const [id, setId] = useState('')\r\n\r\n//     const { classes } = props;\r\n\r\n//     useEffect(() => {\r\n//         setTitle(title)\r\n//     }, [])\r\n\r\n//     const updateBody = async (e) => {\r\n//         const inputData = removeHTMLTags(e);\r\n//         await console.log(inputData);\r\n//         delayedQuery();\r\n//     };\r\n\r\n//     const delayedQuery = useCallback(_.debounce(() => update(), 2000), [])\r\n\r\n//     const update = () => {\r\n//         console.log('Updated DB')\r\n//     }\r\n\r\n//     return (\r\n//         <div className='quillStyle'>\r\n//             <ReactQuill value={text} onChange={updateBody} />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default (EditorComponent)","import React from 'react'\nimport './App.css';\nimport firebase from 'firebase'\nimport SidebarComponent from './sidebar/sidebar'\nimport EditorComponent from './editor/editor'\nimport SidebarItemComponent from './sidebaritem/sidebaritem'\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes: null\n    };\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <div className='pageComponent'>\n          <div className='ediSideComponent'>\n            <SidebarComponent selectedNoteIndex={this.state.selectedNoteIndex}\n              notes={this.state.notes}\n              deleteNote={this.deleteNote}\n              selectNote={this.selectNote}\n              newNote={this.newNote} /></div>\n          {\n            this.state.selectedNote ?\n              <div className='ediComponent'>\n                <EditorComponent selectedNote={this.state.selectedNote}\n                  selectedNoteIndex={this.state.selectedNoteIndex}\n                  notes={this.state.notes}\n                  noteUpdate={this.noteUpdate}></EditorComponent></div> :\n              null\n          }\n        </div>\n      </div >\n    );\n  }\n\n  componentDidMount = () => {\n    firebase\n      .firestore()\n      .collection('notes')\n      .onSnapshot(serverUpdate => {\n        const dbnotes = serverUpdate.docs.map(_doc => {\n          const data = _doc.data();\n          data['id'] = _doc.id;\n          return data;\n        });\n        console.log(dbnotes);\n        this.setState({ notes: dbnotes });\n      });\n  }\n\n  selectNote = (note, index) => this.setState({ selectedNote: note, selectedNoteIndex: index });\n  noteUpdate = (id, noteObj) => {\n    firebase\n      .firestore()\n      .collection('notes')\n      .doc(id)\n      .update({\n        title: noteObj.title,\n        body: noteObj.body,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n  }\n\n  newNote = async (title) => {\n    const note = {\n      title: title,\n      body: ''\n    };\n    const newItemDB = await firebase\n      .firestore()\n      .collection('notes')\n      .add({\n        title: note.title,\n        body: note.body,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      })\n    const newID = newItemDB.id;\n    await this.setState({ notes: [...this.state.notes, note] });\n    const newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(_note => _note.id === newID)[0])\n    this.setState({ selectedNote: this.state.notes[newNoteIndex], selectedNoteIndex: newNoteIndex })\n  }\n\n  deleteNote = async (note) => {\n    const noteIndex = this.state.notes.indexOf(note);\n    await this.setState({ notes: this.state.notes.filter(_note => _note !== note) })\n    if (this.state.selectedNoteIndex === noteIndex) {\n      this.setState({ selectedNoteIndex: null, selectNote: null })\n    } else {\n      this.state.notes.length > 1 ?\n        this.selectedNote(this.state.notes[this.state.selectedNoteIndex - 1], this.state.selectedNoteIndex - 1)\n        : this.setState({ selectedNoteIndex: null, selectNote: null })\n    }\n    firebase\n      .firestore()\n      .collection('notes')\n      .doc(note.id)\n      .delete();\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from \"firebase\"\r\nimport \"firebase/firestore\"\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD4I0m4PuVI-NnCfnwLolb9Sa13GyMGXPw\",\r\n    authDomain: \"evernote-clone-51ff0.firebaseapp.com\",\r\n    projectId: \"evernote-clone-51ff0\",\r\n    storageBucket: \"evernote-clone-51ff0.appspot.com\",\r\n    messagingSenderId: \"282621662605\",\r\n    appId: \"1:282621662605:web:d136ef8d0dd6839ad759c4\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebaseConfig from \"./firebase/config\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}